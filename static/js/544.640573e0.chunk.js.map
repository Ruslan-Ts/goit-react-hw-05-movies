{"version":3,"file":"static/js/544.640573e0.chunk.js","mappings":"uOAEaA,EAAOC,EAAAA,GAAAA,GAAH,wRAaJC,EAAYD,EAAAA,GAAAA,GAAH,kLAMTE,EAAQF,EAAAA,GAAAA,IAAH,6OAYLG,EAAaH,EAAAA,GAAAA,GAAH,0I,SCoBvB,EA/CkB,SAAC,GAAoC,IAAlCI,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OACvC,OACE,UAACP,EAAD,WACGK,IACC,SAAC,KAAD,CACEG,OAAO,KACPC,MAAM,KACNC,MAAM,OACNC,UAAU,kBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,IAGZR,GAAWS,IAAAA,OAAAA,QAAwB,0BACnCR,EAAOS,KAAI,YAAiC,IAA9BC,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MAC9B,OACE,SAACjB,EAAD,WACE,UAAC,KAAD,CACEkB,MAAO,CAAEC,eAAgB,OAAQC,UAAW,UAC5CC,GAAE,kBAAaN,GAFjB,WAIE,0BACE,SAACd,EAAD,CACEqB,IACEN,EAAW,0CAC4BA,GACnC,oIAENO,IAAKN,OAGT,SAACf,EAAD,UAAae,QAfDF,EAmBnB,MAGN,C,yGCDD,UAxCa,WACX,OAA0CS,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOrB,EAAP,KAAkBwB,EAAlB,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOpB,EAAP,KAAgBwB,EAAhB,KA0BA,OAxBAC,EAAAA,EAAAA,YAAU,WACRF,GAAa,GACb,IAAMG,EAAQ,mCAAG,iHAIHC,EAAAA,EAAAA,IACR,6FALW,gBAGHC,EAHG,EAGXC,KAAQD,QAIJE,EAAiBF,EAAQlB,KAAI,kBAAiC,CAClEC,GADiC,EAAGA,GAEpCC,YAFiC,EAAOA,YAGxCC,MAHiC,EAAoBA,MAApB,IAKnCS,EAAiBQ,GAZJ,gDAcbN,GAAW,GAdE,yBAgBbD,GAAa,GAhBA,4EAAH,qDAmBdG,GACD,GAAE,KAGD,+BACE,SAAC,IAAD,CACE3B,UAAWA,EACXC,QAASA,EACTC,OAAQoB,KAIf,C","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const MovieItem = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 480px;\n  object-fit: cover;\n  background-size: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n\nexport const MovieTitle = styled.h2`\n  font-family: 'Arial';\n  font-style: normal;\n  font-weight: 700;\n  text-decoration: none;\n  color: #000000;\n`;\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Circles } from 'react-loader-spinner';\nimport Notiflix from 'notiflix';\nimport { List, MovieItem, Image, MovieTitle } from './MovieList.styled';\n\nconst MovieList = ({ isLoading, isError, movies }) => {\n  return (\n    <List>\n      {isLoading && (\n        <Circles\n          height=\"80\"\n          width=\"80\"\n          color=\"blue\"\n          ariaLabel=\"circles-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n        />\n      )}\n      {isError && Notiflix.Notify.warning('Something went wrong! ')}\n      {movies.map(({ id, poster_path, title }) => {\n        return (\n          <MovieItem key={id}>\n            <Link\n              style={{ textDecoration: 'none', textAlign: 'center' }}\n              to={`/movies/${id}`}\n            >\n              <div>\n                <Image\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                      : 'https://st2.depositphotos.com/4323461/9818/v/450/depositphotos_98187808-stock-illustration-oops-problem-man-business-concept.jpg}'\n                  }\n                  alt={title}\n                />\n              </div>\n              <MovieTitle>{title}</MovieTitle>\n            </Link>\n          </MovieItem>\n        );\n      })}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.object.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  isError: PropTypes.bool.isRequired,\n};\n\nexport default MovieList;\n","import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport MovieList from 'components/MovieList/MovieList';\n\nconst Home = () => {\n  const [popularMovies, setPopularMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchFoo = async () => {\n      try {\n        const {\n          data: { results },\n        } = await axios.get(\n          'https://api.themoviedb.org/3/trending/movie/week?api_key=ac5224eaea5eecab8d1620632b5b6c95'\n        );\n        const filteredMovies = results.map(({ id, poster_path, title }) => ({\n          id,\n          poster_path,\n          title,\n        }));\n        setPopularMovies(filteredMovies);\n      } catch (error) {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchFoo();\n  }, []);\n\n  return (\n    <>\n      <MovieList\n        isLoading={isLoading}\n        isError={isError}\n        movies={popularMovies}\n      />\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["List","styled","MovieItem","Image","MovieTitle","isLoading","isError","movies","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","Notiflix","map","id","poster_path","title","style","textDecoration","textAlign","to","src","alt","useState","popularMovies","setPopularMovies","setIsLoading","setIsError","useEffect","fetchFoo","axios","results","data","filteredMovies"],"sourceRoot":""}